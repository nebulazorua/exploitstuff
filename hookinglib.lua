if(DisableNebulaHookingLib)then DisableNebulaHookingLib()end
local gameMt = getrawmetatable(game)
setreadonly(gameMt,false)
local nc = gameMt.__namecall
local id = gameMt.__index
local ni = gameMt.__newindex
local classIndex={}
local instaIndex={}
local classNewIndex={}
local instaNewIndex={}
local instaNamecall={}
local classNamecall={}
local namecallMethod = getnamecallmethod or get_namecall_method

local checkcaller = checkcaller or is_protosmasher_caller;

getgenv().DisableNebulaHookingLib=function()
	setreadonly(gameMt,false)
	gameMt.__namecall=nc
	gameMt.__index=id
	gameMt.__newindex=ni
	classIndex={}
	instaIndex={}
	classNewIndex={}
	instaNewIndex={}
	instaNamecall={}
	classNamecall={}
	getgenv().HookNamecall=nil;
	getgenv().HookIndex=nil;
	getgenv().HookNewindex=nil;
	getgenv().HookPropSet=nil;
	getgenv().HookPropGet=nil;
	getgenv().HookMethod=nil;
	
	setreadonly(gameMt,true)
end


getgenv().HookMethod=function(instance,method,func)
	if(typeof(instance)=='Instance')then
		if(not instaNamecall[instance])then instaNamecall[instance]={}end
		instaNamecall[instance][method]=func
	else
		if(not classNamecall[instance])then classNamecall[instance]={}end
		classNamecall[instance][method]=func
	end
end

getgenv().HookPropGet=function(instance,property,func)
	if(typeof(instance)=='Instance')then
		if(not instaIndex[instance])then instaIndex[instance]={}end
		instaIndex[instance][property]=func
	else
		if(not classIndex[instance])then classIndex[instance]={}end
		classIndex[instance][property]=func
	end
end

getgenv().HookPropSet=function(instance,property,func)
	if(typeof(instance)=='Instance')then
		if(not instaNewIndex[instance])then instaNewIndex[instance]={}end
		instaNewIndex[instance][property]=func
	else
		if(not classNewIndex[instance])then classNewIndex[instance]={}end
		classNewIndex[instance][property]=func
	end
end

getgenv().GameIndex=id
getgenv().GameNewIndex=ni
getgenv().GameNamecall=nc

local function getClassBs(t,i)
	for class,value in next, t do
		if(i:IsA(class))then
			return value
		end
	end
end

gameMt.__namecall=newcclosure(function(self,...)
	if(checkcaller())then return nc(self,...) end
	local method = namecallMethod()
	local args={...}
	local override = instaNamecall[self] or getClassBs(classNamecall,self)
	if(override and override[method])then
		local ret = override[method](self,...)
		if(typeof(ret)=='table' and (ret.NewArgs or ret.OverrideReturn or ret.Disable))then
			if(typeof(ret.NewArgs)=='table')then
				args=ret.NewArgs
			elseif(ret.NewArgs)then
				args={ret.NewArgs}
			end
			if(ret.OverrideReturn)then
				return ret.OverrideReturn
			elseif(ret.Disable)then
				return;
			end
		end
	end
	
	return nc(self,unpack(args))
end)

gameMt.__index=newcclosure(function(self,index)
	if(checkcaller())then return id(self,index) end
	local override = instaIndex[self] or getClassBs(classIndex,self)
	local realValue=id(self,index)
	if(override and override[index])then
		local ret = override[index](self,realValue)
		if(ret)then
			return ret
		end
	end
	return realValue
end)

gameMt.__newindex=newcclosure(function(self,index,value)
	if(checkcaller())then return ni(self,index,value) end
	local override = (instaNewIndex[self] or getClassBs(classNewIndex,self))
	if(override and override[index])then
		local ret = override[index](self,value)
		if(typeof(ret)=='table' and (ret.NewValue or ret.Disable))then
			if(ret.NewValue)then
				value=ret.NewValue
			elseif(ret.Disable)then
				return;
			end
		end
	end
	
	return ni(self,index,value)
end)
